#!/bin/sh
#
# ---------------------------------------------------------------------------------------
#  Description
# ---------------------------------------------------------------------------------------
#
# Description:
# Quicksync uses changes changes to upload and download relatively
#
# Author:
# Jorge Barrientos Poisson
#
# ---------------------------------------------------------------------------------------
#  ChangeLog
# ---------------------------------------------------------------------------------------
#
#  2023.05.24 | 1st draft
#
# ---------------------------------------------------------------------------------------
#  Variables and Settings
# ---------------------------------------------------------------------------------------

SCRIPT_NAME=$( basename $0 )
SCRIPT_VERSION="2024.02.06"

SERVER=www.lagunagfx.eu
SERVER_PATH="$SERVER:Sync/filesystem"

MACOS_PATH="Documents"
LINUX_PATH="Documentos"

AMIGA_PATH="FS-UAE"
AMIGA_TREE="Configurations Floppies Hard_Drives Kickstarts"

RSYNC_OPTS="-avP --protect-args"

# ---------------------------------------------------------------------------------------
#  Base functions
# ---------------------------------------------------------------------------------------

usage() {
	printf "usage: %s [-h]\n" $SCRIPT_NAME
	printf "         amiga            sync FS-UAE emulator directory tree\n\n"
	printf "         --debug          developer mode\n"
	printf "   -h,   --help           show this help message\n"
	printf "   -v,   --verbose        verbose mode\n"
	printf "         --version        show current version\n"
}

version() {
	printf "  * \e[33m%s\e[0m version \e[33m%s\e[0m\n" $SCRIPT_NAME $SCRIPT_VERSION
}

check_args() {
	if [ $# -eq 0 ];
	then
		# script is called with zero arguments 
		usage
		exit 0
	else
		# one or more arguments are used
		while [ "$1" ];
		do
			# list of accepted arguments
			case "$1" in
				# default help option
				"-h"|"--help")
					usage
					exit 0
					;;
				"--version")
					version
					exit 0
					;;
				"--debug")
					DEBUG="TRUE"
					;;
				# all user defined opts handled by user_args
				*)
					user_args "$@"
					;;
			esac
			# removes the first item from the list of given arguments ('$@')
			shift
		done	
	fi
}

# ---------------------------------------------------------------------------------------
#  Standard Functions
# ---------------------------------------------------------------------------------------

defaults() {
	DEFAULT_DEBUG="FALSE"
	DEFAULT_LAST_ARGUMENT_NEEDED="FALSE"

	# conditional oneliners ( if/then/else == []/&&/|| )
	[ -z $DEBUG ] && DEBUG="$DEFAULT_DEBUG"
	[ -z $LAST_ARGUMENT_NEEDED ] && LAST_ARGUMENT_NEEDED="DEFAULT_LAST_ARGUMENT_NEEDED"
}

user_args() {
	case $1 in
		# insert user defined parameters
		"-v"|"--verbose")
			VERBOSE="TRUE"
			;;
		"-u"|"--upload")
			ACTION="UPLOAD"
			;;
		"-d"|"--download")
			ACTION="DOWNLOAD"
			;;
		*)
			if [ $# -eq 1 ];
			then
				LAST_ARGUMENT="$1"		
			fi

			case $LAST_ARGUMENT in
				"amiga")
					SYSTEM="$AMIGA_PATH"
					TREE="$AMIGA_TREE"
					;;
			esac
			;;
	esac
}

check_essentials() {
	if [ -z "$LAST_ARGUMENT" ];
	then
		printf "\e[31m-!> ERROR:\e[0m A last argument must be specified\n"
		exit 1
	fi
}

action() {	
	do_sync
}


# ---------------------------------------------------------------------------------------
#  User defined functions
# ---------------------------------------------------------------------------------------

do_sync() {

	CLIENT="$HOME/$LINUX_PATH/$SYSTEM"
	SERVER="$SERVER_PATH/$SYSTEM"

	case $ACTION in
		"UPLOAD")
			SRC="$CLIENT"
			DST="$SERVER"
			;;
		"DOWNLOAD")
			SRC="$SERVER"
			DST="$CLIENT"
			;;
	esac
				
	# rsync invocation
	for t in $TREE;
	do
		# fix whitespaces
		t=$( printf "%s" $t | tr '_' '\ ' )
		case $DEBUG in
			"FALSE")
				rsync $RSYNC_OPTS "$SRC/$t" "$DST"/
				;;
			"TRUE")
				printf "\e[34m-!>\e[0m Debugging %s function:\n\n" 'do_sync'
				printf "    RSYNC_OPS : %s\n" "$RSYNC_OPTS" 
				printf "          SRC : %s\n" "$SRC/$t" 
				printf "          DST : %s\n\n" "$DST"
				;;
		esac
	done
}

# ---------------------------------------------------------------------------------------
#  Main block
# ---------------------------------------------------------------------------------------

main() {
	check_args "$@"
	defaults
	check_essentials
	# build_syntax
	version
	action
}

# ---------------------------------------------------------------------------------------
#  Main call
# ---------------------------------------------------------------------------------------

main "$@"
